name: Mayhem
on:
  push:
  pull_request:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DURATIONFROMFLOAT_MAYHEMFILE: mayhem/duration_from_float.Mayhemfile
  INTERVALFINDING_MAYHEMFILE: mayhem/interval_finding.Mayhemfile
  IPFILTER_MAYHEMFILE: mayhem/ipfilter.Mayhemfile
  PACKETPARSINGSOUND_MAYHEMFILE: mayhem/packet_parsing_sound.Mayhemfile
  RECORDENCODEDECODE_MAYHEMFILE: mayhem/record_encode_decode.Mayhemfile
  TUPLEFROMPACKET_MAYHEMFILE: mayhem/tuple_from_packet.Mayhemfile

  
jobs:
  build:
    name: '${{ matrix.os }} shared=${{ matrix.shared }} ${{ matrix.build_type }}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        shared: [false]
        build_type: [Release]
        include:
          - os: ubuntu-latest
            triplet: x64-linux

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ github.repository }}

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Start analysis for duration_from_float
        uses: ForAllSecure/mcode-action@v1
        with:
          mayhem-token: ${{ secrets.MAYHEM_TOKEN }}
          args: --image ${{ steps.meta.outputs.tags }} --file ${{ env.DURATIONFROMFLOAT_MAYHEMFILE }} --duration 300
          sarif-output: sarif

      - name: Start analysis for interval_finding
        uses: ForAllSecure/mcode-action@v1
        with:
          mayhem-token: ${{ secrets.MAYHEM_TOKEN }}
          args: --image ${{ steps.meta.outputs.tags }} --file ${{ env.INTERVALFINDING_MAYHEMFILE }} --duration 300
          sarif-output: sarif

      - name: Start analysis for ipfilter
        uses: ForAllSecure/mcode-action@v1
        with:
          mayhem-token: ${{ secrets.MAYHEM_TOKEN }}
          args: --image ${{ steps.meta.outputs.tags }} --file ${{ env.IPFILTER_MAYHEMFILE }} --duration 300
          sarif-output: sarif

      - name: Start analysis for packet_parsing_sound
        uses: ForAllSecure/mcode-action@v1
        with:
          mayhem-token: ${{ secrets.MAYHEM_TOKEN }}
          args: --image ${{ steps.meta.outputs.tags }} --file ${{ env.PACKETPARSINGSOUND_MAYHEMFILE }} --duration 300
          sarif-output: sarif

      - name: Start analysis for record_encode_decode
        uses: ForAllSecure/mcode-action@v1
        with:
          mayhem-token: ${{ secrets.MAYHEM_TOKEN }}
          args: --image ${{ steps.meta.outputs.tags }} --file ${{ env.RECORDENCODEDECODE_MAYHEMFILE }} --duration 300
          sarif-output: sarif

      - name: Start analysis for tuple_from_packet
        uses: ForAllSecure/mcode-action@v1
        with:
          mayhem-token: ${{ secrets.MAYHEM_TOKEN }}
          args: --image ${{ steps.meta.outputs.tags }} --file ${{ env.TUPLEFROMPACKET_MAYHEMFILE }} --duration 300
          sarif-output: sarif

      - name: Upload SARIF file(s)
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: sarif